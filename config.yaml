# This file can update the JupyterHub Helm chart's default configuration values.
#
# For reference see the configuration reference and default values, but make
# sure to refer to the Helm chart version of interest to you!
#
# Introduction to YAML:     https://www.youtube.com/watch?v=cdLNKUoMc6c
# Chart config reference:   https://zero-to-jupyterhub.readthedocs.io/en/stable/resources/reference.html
# Chart default values:     https://github.com/jupyterhub/zero-to-jupyterhub-k8s/blob/HEAD/jupyterhub/values.yaml
# Available chart versions: https://jupyterhub.github.io/helm-chart/
#

singleuser:
  # limits and guarantees
  memory:
    limit: 512G
    guarantee: 64G
  cpu:
    limit: 128
    guarantee: 32
  # Defines the default image
  image:
    name: brineylab/jupyterhub-datascience
    tag: v0.0.7
  profileList:
    - display_name: "data science"
      description: "default brineylab data analysis environment, including interpreters for Python, R, and Julia"
      default: true
      kubespawner_override:
        lifecycle_hooks:
          postStart:
            exec:
              command:
                - "sh"
                - "-c"
                - >
                  mkdir ${HOME}/codeserver;
    - display_name: "deep learning"
      description: "extends the data science environment to include GPU-enabled torch and transformers libraries, as well as some deep learning-specific JuypyterLab extensions"
      kubespawner_override:
        image: brineylab/jupyterhub-deeplearning:v0.0.7
        extra_resource_limits:
          nvidia.com/gpu: "8"
        lifecycle_hooks:
          postStart:
            exec:
              command:
                - "sh"
                - "-c"
                - >
                  mkdir ${HOME}/codeserver;
  storage:
    # this defines the storageclass used for dynamic notebook PVCs
    dynamic:
      storageClass: nfs-marlo-ssd

    # this defines the default capacity of the PVC for each notebook server
    # capacity: 50Gi
    extraVolumes:
      - name: nfs-stringer-novaseq6k
        persistentVolumeClaim:
          claimName: nfs-stringer-novaseq6k
      - name: nfs-stringer-nextseq2k
        persistentVolumeClaim:
          claimName: nfs-stringer-nextseq2k
    extraVolumeMounts:
      - name: nfs-stringer-novaseq6k
        mountPath: /home/jovyan/sequencing_runs/novaseq
      - name: nfs-stringer-nextseq2k
        mountPath: /home/jovyan/sequencing_runs/nextseq
  extraEnv:
    GRANT_SUDO: "yes"
  uid: 0
  fsGid: 0

hub:
  config:
    Authenticator:
      admin_users:
        - bryan
      allowed_users:
        - jonathan
        - pragati
        - terrence
        - sarah
        - alina
        - jing
      admin_access: true
    JupyterHub:
      authenticator_class: "nativeauthenticator.NativeAuthenticator"
      allow_named_servers: true
      # load_groups:
      #   {
      #     "brineylab":
      #       [
      #         "bryan",
      #         "jonathan",
      #         "pragati",
      #         "terrence",
      #         "sarah",
      #         "alina",
      #         "jing",
      #       ],
      #   }
      # load_roles:
      #   [
      #     {
      #       "name": "brineylab-role",
      #       "description": "can access other users servers in the brineylab group",
      #       "scopes": ["access:servers!group=brineylab"],
      #       "groups": ["brineylab"],
      #     },
      #   ]
    NativeAuthenticator:
      enable_signup: true
      ask_email_on_signup: true

  extraConfig:
    00-first-config: |
      c.KubeSpawner.allow_privilege_escalation
      c.KubeSpawner.args = ['--allow-root', '--collaborative']
      import os, nativeauthenticator
      c.JupyterHub.template_paths = [f"{os.path.dirname(nativeauthenticator.__file__)}/templates/"]
